/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';

type GLTFResult = GLTF & {
	nodes: {
		Globe: THREE.Mesh;
	};
	materials: {
		Material: THREE.MeshStandardMaterial;
	};
};

export default function Globe(props: JSX.IntrinsicElements['group']) {
	const group = useRef<THREE.Group>();
	const { nodes, materials } = useGLTF('/globe.glb') as GLTFResult;
	return (
		<group ref={group} {...props} dispose={null}>
			<mesh
				castShadow
				receiveShadow
				geometry={nodes.Globe.geometry}
				material={materials.Material}
				userData={{ name: 'Globe' }}
			/>
		</group>
	);
}

useGLTF.preload('/globe.glb');
